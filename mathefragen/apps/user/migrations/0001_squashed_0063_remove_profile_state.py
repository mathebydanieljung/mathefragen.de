# Generated by Django 2.1.1 on 2020-08-05 19:07

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import mathefragen.apps.core.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('hashtag', '0001_squashed_0008_auto_20200523_0507'),
        ('question', '0001_squashed_0063_auto_20200728_0629'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hash_id', models.CharField(default=mathefragen.apps.core.models.create_default_hash, editable=False, max_length=30)),
                ('idate', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('udate', models.DateTimeField(auto_now=True, verbose_name='changed at')),
                ('confirm_hash', models.CharField(default='', max_length=60)),
                ('pw_onetime_hash', models.CharField(default='', max_length=60)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
                ('points', models.IntegerField(default=0)),
                ('wp_id', models.IntegerField(blank=True, null=True)),
                ('social_sign', models.CharField(default='', max_length=100)),
                ('fcm_token', models.TextField(default='')),
                ('profile_image', models.ImageField(blank=True, default='', upload_to='')),
                ('bio_text', models.TextField(default='')),
                ('origin', models.CharField(default='', max_length=10)),
                ('status', models.CharField(blank=True, choices=[('schueler', 'Schüler'), ('student', 'Student'), ('lehrer', 'Lehrer')], default='', max_length=30)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Institution',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(blank=True, choices=[('schule', 'Schule'), ('uni', 'Uni')], max_length=20)),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.AddField(
            model_name='profile',
            name='institution',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='students', to='user.Institution'),
        ),
        migrations.AlterField(
            model_name='profile',
            name='status',
            field=models.CharField(blank=True, choices=[('schueler', 'Schüler'), ('student', 'Student'), ('auszubildender', 'Auszubildender'), ('lehrer_prof', 'Lehrer/Professor'), ('sonstiges', 'Sonstiger Berufsstatus')], default='', max_length=50),
        ),
        migrations.CreateModel(
            name='KnowledgeState',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('idate', models.DateTimeField(auto_now_add=True)),
                ('new_knowledge', models.IntegerField()),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_knowledge_states', to=settings.AUTH_USER_MODEL)),
                ('total_knowledge', models.IntegerField(default=10)),
            ],
        ),
        migrations.CreateModel(
            name='PointState',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('idate', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_points', to=settings.AUTH_USER_MODEL)),
                ('new_points', models.IntegerField(default=0)),
                ('total_points', models.IntegerField(default=0)),
                ('reason', models.CharField(choices=[('got_vote', 'Received Vote'), ('helped', 'Helped (given Answer is accepted by question-giver)'), ('accepted', 'Accepted Answer')], default='', max_length=20)),
            ],
        ),
        migrations.AddField(
            model_name='profile',
            name='knowledge_state',
            field=models.IntegerField(default=0),
        ),
        migrations.AddField(
            model_name='profile',
            name='hide_email',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='profile',
            name='hide_full_name',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='profile',
            name='hide_username',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='profile',
            name='reached_ppl',
            field=models.IntegerField(default=0),
        ),
        migrations.AlterField(
            model_name='profile',
            name='bio_text',
            field=models.TextField(blank=True, default=''),
        ),
        migrations.AlterField(
            model_name='profile',
            name='confirm_hash',
            field=models.CharField(blank=True, default='', max_length=60),
        ),
        migrations.AlterField(
            model_name='profile',
            name='fcm_token',
            field=models.TextField(blank=True, default=''),
        ),
        migrations.AlterField(
            model_name='profile',
            name='origin',
            field=models.CharField(blank=True, default='', max_length=10),
        ),
        migrations.AlterField(
            model_name='profile',
            name='pw_onetime_hash',
            field=models.CharField(blank=True, default='', max_length=60),
        ),
        migrations.AlterField(
            model_name='profile',
            name='social_sign',
            field=models.CharField(blank=True, default='', max_length=100),
        ),
        migrations.AddField(
            model_name='profile',
            name='skills',
            field=models.TextField(blank=True, default=''),
        ),
        migrations.AddField(
            model_name='profile',
            name='other_status',
            field=models.CharField(blank=True, default='', max_length=100),
        ),
        migrations.AddField(
            model_name='profile',
            name='last_active',
            field=models.DateTimeField(null=True),
        ),
        migrations.AlterField(
            model_name='profile',
            name='origin',
            field=models.CharField(blank=True, default='webapp', max_length=10),
        ),
        migrations.AddField(
            model_name='profile',
            name='verified',
            field=models.BooleanField(default=False),
        ),
        migrations.CreateModel(
            name='Social',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hash_id', models.CharField(db_index=True, default=mathefragen.apps.core.models.create_default_hash, editable=False, max_length=30)),
                ('idate', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='created at')),
                ('udate', models.DateTimeField(auto_now=True, verbose_name='changed at')),
                ('type', models.CharField(choices=[('ytb', 'Youtube'), ('site', 'Webseite'), ('tw', 'Twitter'), ('xg', 'Xing'), ('insta', 'Instagram'), ('tt', 'TikTok'), ('in', 'LinkedIn')], default='ytb', max_length=10)),
                ('link', models.TextField()),
                ('description', models.TextField(help_text='max. 140 Zeichen', max_length=140)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_socials', to=settings.AUTH_USER_MODEL)),
                ('soft_deleted', models.BooleanField(default=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hash_id', models.CharField(db_index=True, default=mathefragen.apps.core.models.create_default_hash, editable=False, max_length=30)),
                ('idate', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='created at')),
                ('udate', models.DateTimeField(auto_now=True, verbose_name='changed at')),
                ('text', models.TextField()),
                ('given_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='given_reviews', to=settings.AUTH_USER_MODEL)),
                ('given_to', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='received_reviews', to=settings.AUTH_USER_MODEL)),
                ('hashtags', models.ManyToManyField(related_name='confirmed_hashtags', to='hashtag.HashTag')),
                ('source_question', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reviews_from_question', to='question.Question')),
                ('soft_deleted', models.BooleanField(default=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='profile',
            name='found_us_in',
            field=models.CharField(blank=True, default='', max_length=100),
        ),
        migrations.AlterField(
            model_name='profile',
            name='idate',
            field=models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='created at'),
        ),
        migrations.AddField(
            model_name='profile',
            name='phone_number',
            field=models.CharField(blank=True, default='', max_length=100),
        ),
        migrations.AddField(
            model_name='profile',
            name='answers_this_month',
            field=models.IntegerField(default=0),
        ),
        migrations.AddField(
            model_name='profile',
            name='answers_this_week',
            field=models.IntegerField(default=0),
        ),
        migrations.AddField(
            model_name='profile',
            name='total_answers',
            field=models.IntegerField(default=0),
        ),
        migrations.AddField(
            model_name='profile',
            name='answered_month',
            field=models.IntegerField(default=0),
        ),
        migrations.AddField(
            model_name='profile',
            name='answered_week',
            field=models.IntegerField(default=0),
        ),
        migrations.AddField(
            model_name='profile',
            name='reported',
            field=models.IntegerField(default=0),
        ),
        migrations.AlterField(
            model_name='profile',
            name='origin',
            field=models.CharField(blank=True, default='webapp', max_length=50),
        ),
        migrations.AlterField(
            model_name='profile',
            name='profile_image',
            field=models.ImageField(blank=True, default='', upload_to='user/'),
        ),
        migrations.AlterField(
            model_name='profile',
            name='origin',
            field=models.CharField(blank=True, default='local-webapp', max_length=50),
        ),
        migrations.CreateModel(
            name='HelperState',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(blank=True, null=True)),
                ('type', models.CharField(blank=True, choices=[('top', 'Top Helfer'), ('stetig', 'Stetiger Helfer')], default='', max_length=10)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_help_stats', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PostalCode',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.IntegerField(db_index=True)),
                ('city', models.CharField(max_length=100)),
                ('district', models.CharField(default='', max_length=100)),
                ('county', models.CharField(default='', max_length=100)),
                ('state', models.CharField(max_length=100)),
            ],
        ),
        migrations.AddField(
            model_name='profile',
            name='postal_code',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='users_in_this_area', to='user.PostalCode'),
        ),
        migrations.AlterField(
            model_name='profile',
            name='hash_id',
            field=models.CharField(db_index=True, default=mathefragen.apps.core.models.create_default_hash, editable=False, max_length=30),
        ),
        migrations.AddField(
            model_name='profile',
            name='soft_deleted',
            field=models.BooleanField(default=False),
        ),
        migrations.CreateModel(
            name='Badge',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hash_id', models.CharField(db_index=True, default=mathefragen.apps.core.models.create_default_hash, editable=False, max_length=30)),
                ('idate', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='created at')),
                ('udate', models.DateTimeField(auto_now=True, verbose_name='changed at')),
                ('name', models.CharField(max_length=100)),
                ('can_edit_answers', models.BooleanField(default=False)),
                ('can_edit_questions', models.BooleanField(default=False)),
                ('power_report', models.BooleanField(default=False, help_text='1 report = 3 reports')),
            ],
            options={
                'abstract': False,
                'permissions': (('can_drive', 'Can drive'), ('can_vote', 'Can vote in elections'), ('can_drink', 'Can drink alcohol')),
            },
        ),
        migrations.AddField(
            model_name='profile',
            name='badges',
            field=models.ManyToManyField(blank=True, to='user.Badge'),
        ),
        migrations.AlterField(
            model_name='profile',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL, verbose_name='auth user'),
        ),
    ]
